# github action that just checks for the files changed in a PR
name: "test-changed-files"

on:
  workflow_dispatch:
  # run on new pushes to the branch
  push:

      

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  id-token: write
  packages: write

jobs:
  deployment:
    runs-on: ubuntu-latest
  
    steps:
    # Checkout your projects repository based on the ref provided by the branch-deploy step
    - uses: actions/checkout@v3
      with:
        ref: ${{ steps.branch-deploy.outputs.ref }}
        fetch-depth: 0
    
    - name: Print shas
      run: |
        # Print the SHA of the commit that triggered the workflow
        echo "The SHA of the commit that triggered this workflow is ${{ github.sha }}"
        # Print the SHA of the head commit of the pull request
        echo "The SHA of the head commit of the pull request is ${{ github.event.pull_request.head.sha }}"
        # Print the SHA of the merge commit of the pull request
        echo "The SHA of the merge commit of the pull request is ${{ github.event.pull_request.merge_commit_sha }}"
        # Print the SHA of the base commit of the pull request
        echo "The SHA of the base commit of the pull request is ${{ github.event.pull_request.base.sha }}"

    # Get changed file names
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v29.0.7
      with:
        sha: ${{ github.event.issue.pull_request.head.sha }}
        # get the target branch lastest commit sha
        base_sha: ${{ github.event.issue.pull_request.base.sha }}
    
    # loop through each file name
    - name: Loop through each file name
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "File name: $file"
        done
